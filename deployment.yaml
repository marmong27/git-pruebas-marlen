# Create a pod containing the PHP-FPM application (my-php-app)
# and nginx, each mounting the `shared-files` volume to their
# respective /var/www/html directories.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-nginx-deployment
  labels:
          app: php-nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: php-nginx
  template:
   metadata:
    labels:
      app: php-nginx
   spec:
    volumes:
      # Create the shared files volume to be used in both pods
      - name: shared-files
        emptyDir: {}

    # Add the ConfigMap we declared above as a volume for the pod
      - name: nginx-config-volume
        configMap:
          name: nginx-config

    containers:
    # Our PHP-FPM application
      - image: gcr.io/PROJECT_ID/IMAGE:TAG
        name: php
        volumeMounts:
          - name: shared-files
            mountPath: /var/www/html
      # Important! After this container has started, the PHP files
      # in our Docker image aren't in the shared volume. We need to
      # get them into the shared volume. If we tried to write directly
      # to this volume from our Docker image the files wouldn't appear
      # in the nginx container.
      #
      # So, after the container has started, copy the PHP files from this
      # container's local filesystem (/app -- added via the Docker image)
      # to the shared volume, which is mounted at /var/www/html.
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp -r /home/app/code/. /var/www/html"]

    # Our nginx container, which uses the configuration declared above,
    # along with the files shared with the PHP-FPM app.
      - image: nginx:1.14.2
        name: nginx
        volumeMounts:
          - name: shared-files
            mountPath: /var/www/html
          - name: nginx-config-volume
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
